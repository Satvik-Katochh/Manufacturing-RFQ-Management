{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./login.service\";\nexport let SupplierService = /*#__PURE__*/(() => {\n  class SupplierService {\n    constructor(http, loginService) {\n      this.http = http;\n      this.loginService = loginService;\n      this.token = this.loginService.getToken();\n    }\n\n    addSupplier(s) {\n      // console.log(\"called\");\n      // alert(\"called\");\n      return this.http.post('https://localhost:7288/api/Supplier/addSupplier', s, {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.token\n        })\n      });\n    }\n\n    getsupplier() {\n      return this.http.get(\"https://localhost:7288/api/Supplier/GetAllSuppliers\", {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.token\n        })\n      });\n    }\n\n    updatesupplier(s) {\n      console.log(\"called\");\n      return this.http.put('https://localhost:7288/api/Supplier/Update', s, {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.token\n        })\n      });\n    }\n\n    updateFeedback(s) {\n      return this.http.put('https://localhost:7288/api/Supplier/UpdateFeedback', s, {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.token\n        })\n      });\n    }\n\n  }\n\n  SupplierService.ɵfac = function SupplierService_Factory(t) {\n    return new (t || SupplierService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LoginService));\n  };\n\n  SupplierService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SupplierService,\n    factory: SupplierService.ɵfac,\n    providedIn: 'root'\n  });\n  return SupplierService;\n})();","map":null,"metadata":{},"sourceType":"module"}