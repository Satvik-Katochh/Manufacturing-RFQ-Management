package com.mfpe.plant.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.mfpe.plant.exception.PartNotFoundException;
import com.mfpe.plant.model.MessageResponse;
import com.mfpe.plant.model.Part;
import com.mfpe.plant.model.ReorderRules;
import com.mfpe.plant.service.PlantService;

import lombok.extern.java.Log;
import lombok.extern.log4j.Log4j2;
import lombok.extern.slf4j.Slf4j;

@CrossOrigin("*")
@RestController
@Slf4j
public class PlantController {
	
	@Autowired
	private PlantService plantService;

	@GetMapping("/viewpartsreorder")
	
	public ResponseEntity<List<Part>> viewPartsReorder() {
		log.info("Inside ViewPartsReorder of PartController");
		List<Part> list = plantService.viewPartsReorder();
		return new ResponseEntity<List<Part>>(list, HttpStatus.OK);
	}

	@GetMapping("/viewstockinhand/{partId}")
	public ResponseEntity<Part> viewStockInHand(@PathVariable("partId") int partId) throws PartNotFoundException {
		log.info("Inside viewStockInHand of PartController");
		Part part = plantService.viewStockInHand(partId);
		return new ResponseEntity<Part>(part, HttpStatus.OK);
	}
	
	@GetMapping("/viewdemand/{partId}")
	public ResponseEntity<Integer> viewDemand(@PathVariable("partId") int partId) throws PartNotFoundException {
		log.info("Inside viewStockInHand of PartController");
		int demand = plantService.viewDemand(partId);
		return new ResponseEntity<Integer>(demand, HttpStatus.OK);
	}
	

	@PostMapping("/updateminmaxquantity")
	
	public ResponseEntity<?> updateMinMaxQuantities(@RequestBody ReorderRules reorderRules) {
		//log.info("Inside updateMinMaxQuantities of PartController");
		MessageResponse message = plantService.updateMinMaxQuantities(reorderRules);
		return new ResponseEntity<String>(message, HttpStatus.OK);
	}
	
	@GetMapping("/health-check")
	public ResponseEntity<String> healthCheck() {
		return new ResponseEntity<>("Ok", HttpStatus.OK);
	}

}
